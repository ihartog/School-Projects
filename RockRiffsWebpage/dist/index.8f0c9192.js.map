{"mappings":"AAAA;;;;;;;;;;;;;CAaC,GAED,8DAA8D;AAC9D,uDAAuD;AACvD,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG;AAE3B,oFAAoF;AACpF,QAAQ,GAAG,CAAC;IAAE;IAAS;AAAM,GAAG;AAEhC,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,OAAO,SAAS,cAAc,CAAC;IACrC,MAAM,iBAAiB,SAAS,cAAc,CAAC;IAC/C,MAAM,iBAAiB,SAAS,aAAa,CAAC;IAE9C,+BAA+B;IAC/B,SAAS,eAAe,IAAI;QAC1B,sBAAsB;QACtB,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,KAAK,SAAS,GAAG;QAEjB,iCAAiC;QACjC,KAAK,SAAS,GAAG,CAAC;eACP,EAAE,KAAK,QAAQ,CAAC;kBACb,EAAE,KAAK,QAAQ,CAAC,OAAO,EAAE,KAAK,KAAK,CAAC;;6BAEzB,EAAE,KAAK,KAAK,CAAC;6CACG,EAAE,KAAK,QAAQ,CAAC;4CACjB,EAAE,KAAK,KAAK,CAAC,KAAK,QAAQ,GAAG,IAAI,CAAC,EAAE,AAAC,CAAA,KAAK,QAAQ,GAAG,EAAC,EAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG,KAAK;IAC7H,CAAC;QAED,OAAO;IACT;IAEA,yCAAyC;IACzC,SAAS,eAAe,MAAM;QAC5B,eAAe,WAAW,GAAG,OAAO,IAAI;QAExC,uBAAuB;QACvB,eAAe,SAAS,GAAG;QAE3B,mDAAmD;QACnD,MAAM,gBAAgB,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,KAAK,OAAO,QAAQ;QAErF,cAAc,OAAO,CAAC,CAAC;YACrB,8BAA8B;YAC9B,MAAM,WAAW,eAAe;YAChC,eAAe,WAAW,CAAC;QAC7B;IACF;IAEA,iCAAiC;IACjC,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC;QACtB,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,OAAO,WAAW,GAAG,OAAO,IAAI;QAChC,OAAO,OAAO,GAAG,IAAM,eAAe;QACtC,KAAK,WAAW,CAAC;IACnB;IAEA,2CAA2C;IAC3C,IAAI,OAAO,OAAO,CAAC,MAAM,GAAG,GAC1B,eAAe,OAAO,OAAO,CAAC,EAAE;AAEpC","sources":["src/js/app.js"],"sourcesContent":["/**\n * WEB222 â€“ Assignment 3\n *\n * I declare that this assignment is my own work in accordance with\n * Seneca Academic Policy. No part of this assignment has been\n * copied manually or electronically from any other source\n * (including web sites) or distributed to other students.\n *\n * Please update the following with your information:\n *\n *      Name:       Ian Hartog\n *      Student ID: 163592199\n *      Date:       <SUBMISSION_DATE>\n */\n\n// All of our data is available on the global `window` object.\n// Create local variables to work with it in this file.\nconst { artists, songs } = window;\n\n// For debugging, display all of our data in the console. You can remove this later.\nconsole.log({ artists, songs }, \"Song and Artist App Data\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const menu = document.getElementById(\"menu\");\n  const selectedArtist = document.getElementById(\"selected-artist\");\n  const cardsContainer = document.querySelector(\".cards-container\");\n\n  // Function to create song card\n  function createSongCard(song) {\n    // Create card element\n    const card = document.createElement(\"div\");\n    card.className = \"artist-card\";\n\n    // Create inner HTML for the card\n    card.innerHTML = `\n      <a href=\"${song.mediaUrl}\" target=\"_blank\">\n        <img src=\"${song.imageUrl}\" alt=\"${song.title} Image\" class=\"artist-image\">\n      </a>\n      <h3 class=\"song-title\">${song.title}</h3>\n      <time class=\"song-year\">Year Recorded: ${song.released}</time>\n      <span class=\"song-duration\">Duration: ${Math.floor(song.duration / 60)}:${(song.duration % 60).toString().padStart(2, \"0\")}</span>\n    `;\n\n    return card;\n  }\n\n  // Function to show artist info and songs\n  function showArtistInfo(artist) {\n    selectedArtist.textContent = artist.name;\n\n    // Clear existing cards\n    cardsContainer.innerHTML = \"\";\n\n    // Filter and display songs for the selected artist\n    const filteredSongs = window.songs.filter((song) => song.artistId === artist.artistId);\n\n    filteredSongs.forEach((song) => {\n      // Create and append song card\n      const songCard = createSongCard(song);\n      cardsContainer.appendChild(songCard);\n    });\n  }\n\n  // Create buttons for each artist\n  window.artists.forEach((artist) => {\n    const button = document.createElement(\"button\");\n    button.textContent = artist.name;\n    button.onclick = () => showArtistInfo(artist);\n    menu.appendChild(button);\n  });\n\n  // Show the first artist's songs by default\n  if (window.artists.length > 0) {\n    showArtistInfo(window.artists[0]);\n  }\n});\n"],"names":[],"version":3,"file":"index.8f0c9192.js.map","sourceRoot":"/__parcel_source_root/"}